{"version":3,"sources":["api/transaction.ts","content/pages/Components/Transaction/index.tsx"],"names":["apiurl","getList","a","axios","get","then","response","res","data","console","error","Transaction","useState","message","setMessage","tableData","setTableData","results","length","useEffect","getData","id","product","heading","maxWidth","container","direction","justifyContent","alignItems","spacing","item","xs","title","component","Paper","map","entry","i","RouterLink","to","productColor","productTenor","totalPrice","status","reason","uniqueCode","price","colSpan"],"mappings":"0PAEMA,EAAS,0BAER,SAAeC,IAAtB,+B,4CAAO,4BAAAC,EAAA,+EAEmBC,IAAMC,IAAN,UAAaJ,EAAb,iBAAmCK,MAAK,SAAAC,GAAQ,OAAIA,KAFvE,cAEOC,EAFP,yBAIQA,EAAIC,MAJZ,gCAMCC,QAAQC,MAAR,MAND,0D,6RC0GQC,UA5Ff,WACI,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAFkB,4CAIlB,4BAAAd,EAAA,sEAC0BD,cAD1B,QACUgB,EADV,UAIQH,EAAW,uBACS,OAAjBG,EAAQT,MAAiBS,EAAQT,KAAKU,QACrCF,EAAaC,EAAQT,OANjC,4CAJkB,sBAuBlB,OARAW,qBAAU,YAfQ,mCAgBdC,GACAJ,EAAa,CAAC,CACVK,GAAI,EACJC,QAAS,YAEd,IAGC,qCACI,cAAC,IAAD,UACI,+DAGJ,cAAC,IAAD,UACI,cAAC,IAAD,CAAWC,QAAQ,kBAGvB,cAAC,IAAD,CAAWC,SAAS,KAApB,SACI,cAAC,IAAD,CACIC,WAAS,EACTC,UAAU,MACVC,eAAe,SACfC,WAAW,UACXC,QAAS,EALb,SAOI,cAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAYC,MAAM,qBAClB,cAAC,IAAD,IACA,cAAC,IAAD,UACI,cAAC,IAAD,CAAgBC,UAAWC,IAA3B,SACI,eAAC,IAAD,CAAO,aAAW,gBAAlB,UACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,wBACA,cAAC,IAAD,8BACA,cAAC,IAAD,8BACA,cAAC,IAAD,4BACA,cAAC,IAAD,uBACA,cAAC,IAAD,uBACA,cAAC,IAAD,4BACA,cAAC,IAAD,2BAIR,cAAC,IAAD,UAESnB,EAAUG,OAAUH,EAAUoB,KAAI,SAACC,EAAOC,GACvC,OACI,eAAC,IAAD,WACI,cAAC,IAAD,UAAW,cAAC,IAAD,CAAQJ,UAAWK,IAAYC,GAAE,mCAA8BH,EAAMf,IAArE,SAA4Ee,EAAMd,YAC7F,cAAC,IAAD,UAAYc,EAAMI,eAClB,cAAC,IAAD,UAAYJ,EAAMK,eAClB,cAAC,IAAD,UAAYL,EAAMM,aAClB,cAAC,IAAD,UAAYN,EAAMO,SAClB,cAAC,IAAD,UAAYP,EAAMQ,SAClB,cAAC,IAAD,UAAYR,EAAMS,aAClB,cAAC,IAAD,UAAYT,EAAMU,UARPT,MAWlB,cAAC,IAAD,UACD,cAAC,IAAD,CAAWU,QAAS,EAApB,SAAwBlC","file":"static/js/22.716528bb.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst apiurl = 'http://103.8.79.68:8080'\r\n\r\nexport async function getList(){\r\n    try{\r\n        const res = await axios.get(`${apiurl}/transaction`).then(response => response)\r\n\r\n        return res.data\r\n    }catch(errors){\r\n        console.error(errors)\r\n    }\r\n}","import { useState, useEffect } from 'react'\r\nimport { getList } from 'src/api/transaction'\r\nimport { Helmet } from 'react-helmet-async'\r\nimport PageTitle from 'src/components/PageTitle'\r\nimport PageTitleWrapper from 'src/components/PageTitleWrapper'\r\nimport Swal from 'sweetalert2'\r\nimport { Container, Grid, Card, CardHeader, CardContent, Divider, FormControl, Typography } from '@material-ui/core'\r\nimport Footer from 'src/components/Footer'\r\nimport Button from '@material-ui/core/Button'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableContainer from '@material-ui/core/TableContainer'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport { NavLink as RouterLink } from 'react-router-dom'\r\n\r\nfunction Transaction(){\r\n    const [message, setMessage] = useState('')\r\n    const [tableData, setTableData] = useState([])\r\n\r\n    async function getData(){\r\n        const results = await getList()\r\n\r\n        if(results){\r\n            setMessage('Belum ada transaksi')\r\n            if(results.data !== null && results.data.length){\r\n                setTableData(results.data)\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData()\r\n        setTableData([{\r\n            id: 1,\r\n            product: \"Test\"\r\n        }])\r\n    }, [])\r\n    \r\n    return(\r\n        <>\r\n            <Helmet>\r\n                <title> Transaction | Otosales </title>\r\n            </Helmet>\r\n\r\n            <PageTitleWrapper>\r\n                <PageTitle heading=\"Transaction\" />\r\n            </PageTitleWrapper>\r\n\r\n            <Container maxWidth=\"lg\">\r\n                <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"stretch\"\r\n                    spacing={3}\r\n                >\r\n                    <Grid item xs={12}>\r\n                        <Card>\r\n                            <CardHeader title=\"Transaction List\" />\r\n                            <Divider />\r\n                            <CardContent>\r\n                                <TableContainer component={Paper}>\r\n                                    <Table aria-label=\"Problem Table\">\r\n                                        <TableHead>\r\n                                            <TableRow>\r\n                                                <TableCell> Product </TableCell>\r\n                                                <TableCell> Product Color </TableCell>\r\n                                                <TableCell> Product Tenor </TableCell>\r\n                                                <TableCell> Total Price </TableCell>\r\n                                                <TableCell> Status </TableCell>\r\n                                                <TableCell> Reason </TableCell>\r\n                                                <TableCell> Unique Code </TableCell>\r\n                                                <TableCell> Price </TableCell>\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n\r\n                                        <TableBody>\r\n                                            {\r\n                                                (tableData.length) ? tableData.map((entry, i) => {\r\n                                                    return(\r\n                                                        <TableRow key={i}>\r\n                                                            <TableCell><Button component={RouterLink} to={`/management/transactions/${entry.id}`}>{entry.product}</Button></TableCell>\r\n                                                            <TableCell>{entry.productColor}</TableCell>\r\n                                                            <TableCell>{entry.productTenor}</TableCell>\r\n                                                            <TableCell>{entry.totalPrice}</TableCell>\r\n                                                            <TableCell>{entry.status}</TableCell>\r\n                                                            <TableCell>{entry.reason}</TableCell>\r\n                                                            <TableCell>{entry.uniqueCode}</TableCell>\r\n                                                            <TableCell>{entry.price}</TableCell>\r\n                                                        </TableRow>\r\n                                                    )\r\n                                                }) : <TableRow>\r\n                                                    <TableCell colSpan={8}>{message}</TableCell>\r\n                                                </TableRow>\r\n                                            }\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </TableContainer>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Transaction"],"sourceRoot":""}