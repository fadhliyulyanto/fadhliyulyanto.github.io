{"version":3,"sources":["api/register.ts","content/pages/Components/Register/index.tsx"],"names":["apiurl","process","REACT_APP_API_URL","registerData","endpoint","rawData","a","axios","post","JSON","stringify","then","response","catch","errors","Swal","fire","icon","title","console","error","res","Register","useForm","register","handleSubmit","formState","onSubmit","data","result","log","Container","maxWidth","Box","display","justifyContent","justifyItems","marginY","height","Grid","item","xs","md","lg","CardContent","Card","paddingX","paddingY","sx","width","variant","align","gutterBottom","mt","marginTop","marginBottom","component","TextField","required","value","message","pattern","helperText","email","fullWidth","label","name","phone","multiline","rows","Button","type"],"mappings":"mVAGMA,EAASC,mIAAYC,kBAEpB,SAAeC,EAAtB,oC,4CAAO,WAA4BC,EAAkBC,GAA9C,eAAAC,EAAA,sEACeC,IACdC,KADc,UACNR,EADM,YACII,GAAYK,KAAKC,UAAUL,IAC5CM,MAAK,SAAAC,GAAQ,OAAIA,KACjBC,OAAM,SAAAC,GACHC,IAAKC,KAAK,CACNC,KAAM,UACNC,MAAO,+BAEXC,QAAQC,MAAMN,MATnB,cACGO,EADH,yBAYIA,GAZJ,4C,iCCkGQC,UAvFf,WACI,MAA0DC,cAAlDC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAA2BX,EAA7C,EAAgCY,UAAaZ,OACvCa,EAA+B,uCAAG,WAAMC,GAAN,eAAAtB,EAAA,sEACfH,EAAa,WAAYyB,GADV,OAC9BC,EAD8B,OAGpCV,QAAQW,IAAID,GAHwB,2CAAH,sDAMrC,OACI,qCACA,cAAC,IAAD,UACI,0DAEJ,cAACE,EAAA,EAAD,CAAWC,SAAS,KAApB,SACI,cAACC,EAAA,EAAD,CACIC,QAAQ,OACRC,eAAe,SACfC,aAAa,SACbC,QAAS,GACTC,OAAO,OALX,SAOI,cAACC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACI,eAACZ,EAAA,EAAD,CAAKa,SAAU,EAAGC,SAAU,EAAGC,GAAI,CAAE,uBAAyB,CAACC,MAAO,IAAtE,UACI,cAAC,IAAD,CAAMC,QAAQ,KAAKC,MAAM,SAASC,cAAY,EAA9C,sBAIA,eAACnB,EAAA,EAAD,CACIe,GAAI,CAAE,uBAAwB,CAAEK,GAAI,EAAGJ,MAAO,IAC9CK,UAAW,EACXC,aAAc,EACd5B,SAAUF,EAAaE,GACvB6B,UAAU,OALd,UAMI,cAACC,EAAA,EAAD,2BACQjC,EAAS,QAAS,CAClBkC,SAAU,CAAEC,OAAO,EAAMC,QAAS,sBAClCC,QAAS,CAACF,MAAO,aAAcC,QAAS,6BAHhD,IAKIE,WAAahD,EAAOiD,MAASjD,EAAOiD,MAAMH,QAAU,GACpDI,WAAS,EACTC,MAAM,WAEV,cAACR,EAAA,EAAD,2BACQjC,EAAS,OAAQ,CACjBkC,SAAU,CAAEC,OAAO,EAAMC,QAAS,wBAF1C,IAIIE,WAAahD,EAAOoD,KAAQpD,EAAOoD,KAAKN,QAAU,GAClDI,WAAS,EACTC,MAAM,UAEV,cAACR,EAAA,EAAD,2BACQjC,EAAS,QAAS,CAClBkC,SAAU,CACNC,OAAO,EACPC,QAAS,sBAEbC,QAAS,CACLF,MAAO,iDACPC,QAAS,2BARrB,IAWIE,WAAYhD,EAAOqD,MAAQrD,EAAOqD,MAAMP,QAAU,GAClDI,WAAS,EACTC,MAAM,WAGV,cAACR,EAAA,EAAD,2BACQjC,EAAS,YADjB,IAEIwC,WAAS,EACTI,WAAS,EACTC,KAAM,EACNJ,MAAM,aAEV,cAACK,EAAA,EAAD,CAAQC,KAAK,SAASrB,QAAQ,YAAYF,GAAI,CAAEK,GAAI,GAApD","file":"static/js/24.71af2d5a.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport Swal from 'sweetalert2'\r\n\r\nconst apiurl = process.env.REACT_APP_API_URL\r\n\r\nexport async function registerData(endpoint: string, rawData: object){\r\n    const res = await axios.\r\n        post(`${apiurl}/${endpoint}`, JSON.stringify(rawData))\r\n        .then(response => response)\r\n        .catch(errors => {\r\n            Swal.fire({\r\n                icon: 'warning',\r\n                title: \"Oops..Something went wrong\"\r\n            });\r\n            console.error(errors);\r\n        })\r\n\r\n    return res\r\n}","import { Container, Grid, Card, CardHeader, CardContent, Typography as Text } from '@material-ui/core';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport Box from '@material-ui/core/Box';\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport { useForm, SubmitHandler } from 'react-hook-form'\r\nimport { registerData } from 'src/api/register';\r\n\r\ntype Inputs = {\r\n    email: string,\r\n    name: string,\r\n    nik: string,\r\n    phone: string,\r\n    address: string\r\n}\r\n\r\nfunction Register(){\r\n    const { register, handleSubmit, formState: { errors } } = useForm<Inputs>();\r\n    const onSubmit: SubmitHandler<Inputs> = async data => {\r\n        const result = await registerData('register', data)\r\n\r\n        console.log(result);\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <Helmet>\r\n            <title>Register - Otosales</title>\r\n        </Helmet>\r\n        <Container maxWidth=\"lg\">\r\n            <Box\r\n                display=\"flex\"\r\n                justifyContent=\"center\"\r\n                justifyItems=\"center\"\r\n                marginY={17}\r\n                height=\"60vh\"\r\n                >\r\n                <Grid item xs={12} md={9} lg={6}>\r\n                    <CardContent>\r\n                        <Card>\r\n                            <Box paddingX={2} paddingY={3} sx={{ '& .MuiTextField-root' : {width: 1} }}>\r\n                                <Text variant=\"h5\" align=\"center\" gutterBottom>\r\n                                    Register\r\n                                </Text>\r\n\r\n                                <Box\r\n                                    sx={{ '& .MuiTextField-root': { mt: 2, width: 1 }, }}\r\n                                    marginTop={2}\r\n                                    marginBottom={2}\r\n                                    onSubmit={handleSubmit(onSubmit)}\r\n                                    component=\"form\">\r\n                                    <TextField\r\n                                        {...register(\"email\", {\r\n                                            required: { value: true, message: \"Email is required!\"},\r\n                                            pattern: {value: /^\\S+@\\S+$/i, message: 'Invalid email address!'}\r\n                                        })}\r\n                                        helperText={(errors.email) ? errors.email.message : ''}\r\n                                        fullWidth\r\n                                        label=\"Email\"\r\n                                        />\r\n                                    <TextField\r\n                                        {...register(\"name\", {\r\n                                            required: { value: true, message: \"Name is required!\"},\r\n                                        })}\r\n                                        helperText={(errors.name) ? errors.name.message : ''}\r\n                                        fullWidth\r\n                                        label=\"Name\"\r\n                                        />\r\n                                    <TextField\r\n                                        {...register(\"phone\", {\r\n                                            required: {\r\n                                                value: true,\r\n                                                message: \"Phone is required!\",\r\n                                            },\r\n                                            pattern: {\r\n                                                value: /\\(?([0-9]{3})\\)?([ .-]?)([0-9]{3})\\2([0-9]{4})/,\r\n                                                message: \"Invalid phone number\"\r\n                                            }\r\n                                        })}\r\n                                        helperText={errors.phone ? errors.phone.message : ''}\r\n                                        fullWidth\r\n                                        label=\"Phone\"\r\n                                        />\r\n\r\n                                    <TextField\r\n                                        {...register(\"address\")}\r\n                                        fullWidth\r\n                                        multiline\r\n                                        rows={4}\r\n                                        label=\"Address\"\r\n                                        />\r\n                                    <Button type=\"submit\" variant=\"contained\" sx={{ mt: 2 }}> Save </Button>\r\n                                </Box>\r\n                            </Box>\r\n                        </Card>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Box>\r\n        </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Register"],"sourceRoot":""}