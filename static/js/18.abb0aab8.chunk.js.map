{"version":3,"sources":["components/Footer/index.tsx","api/blogs.ts","content/pages/Home/BlogsPage/index.tsx"],"names":["FooterWrapper","experimentalStyled","Box","theme","spacing","Footer","currentYear","moment","format","maxWidth","py","display","xs","md","alignItems","textAlign","justifyContent","variant","sx","pt","href","target","rel","require","config","apiurl","process","getBlogs","a","axios","get","result","data","console","error","response","getBlogsDetail","id","saveComments","param","timestamp","unix","headers","securitycode","sha256Generator","username","toString","post","res","BlogsPage","useState","tableData","setTableData","getData","type","results","length","useEffect","p","container","direction","item","map","entry","i","textDecoration","component","RouterLink","to","gutterBottom","title","publishedDate"],"mappings":"yKAAA,wEAIMA,EAAgBC,YAAmBC,IAAnBD,EACpB,gBAAGE,EAAH,EAAGA,MAAH,6DAEgBA,EAAMC,QAAQ,GAF9B,YAgCaC,IA1Bf,WACE,IAAMC,EAAcC,MAASC,OAAO,QACpC,OACE,cAACR,EAAD,UACE,cAAC,IAAD,CAAWS,SAAS,KAApB,SACE,eAAC,IAAD,CACEC,GAAI,EACJC,QAAS,CAAEC,GAAI,QAASC,GAAI,QAC5BC,WAAW,SACXC,UAAW,CAAEH,GAAI,SAAUC,GAAI,QAC/BG,eAAe,gBALjB,UAOE,cAAC,IAAD,UACE,eAAC,IAAD,CAAYC,QAAQ,YAApB,kBACUX,EADV,0BAIF,eAAC,IAAD,CAAYY,GAAI,CAAEC,GAAI,CAAEP,GAAI,EAAGC,GAAI,IAAOI,QAAQ,YAAlD,wBACa,cAAC,IAAD,CAAMG,KAAK,sBAAsBC,OAAO,SAASC,IAAI,sBAArD,qC,iNCzBvBC,EAAQ,KAAUC,SAElB,IAAMC,EAASC,oCAGFC,EAAQ,uCAAG,4BAAAC,EAAA,+EAEKC,IAAMC,IAAN,UAAaL,EAAb,WAFL,cAEVM,EAFU,yBAITA,EAAOC,MAJE,uCAMhBC,QAAQC,MAAR,MANgB,kBAOT,KAAOC,SAASH,MAPP,yDAAH,qDAWRI,EAAc,uCAAG,WAAOC,GAAP,eAAAT,EAAA,+EAGDC,IAAMC,IAAN,UAAaL,EAAb,0BAAqCY,IAHpC,cAGhBN,EAHgB,yBAKfA,EAAOC,MALQ,uCAOtBC,QAAQC,MAAR,MAPsB,kBAQf,KAAOC,SAASH,MARD,yDAAH,sDAYdM,EAAY,uCAAG,WAAOC,EAAYF,GAAnB,mBAAAT,EAAA,6DAClBY,EAAYjC,MAASkC,OAErBjB,EAAS,CACXkB,QAAS,CACLC,aAAcC,YA9BXlB,mFA8BkCa,EAAMM,SAASL,GACpDA,UAAWA,EAAUM,aANL,kBAWFjB,IAAMkB,KAAN,UAActB,EAAd,2BAAuCY,GAAME,EAAOf,GAXlD,cAWdwB,EAXc,yBAabA,EAAIhB,MAbS,yDAeb,KAAOG,SAASH,MAfH,yDAAH,yD,2KC4CViB,UAhEf,WACI,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAEMC,EAAO,uCAAG,4BAAAzB,EAAA,4DACE,CACV0B,KAAM,SAFE,SAKO3B,cALP,QAKNK,EALM,QAOJuB,QAAQC,OAAS,GACrBJ,EAAapB,EAAKuB,SARV,2CAAH,qDAgBb,OAJAE,qBAAU,WACNJ,MACD,IAGC,qCACI,cAAC,IAAD,UACI,wDAGJ,cAAC,IAAD,CAAW5C,SAAS,KAApB,SACI,cAAC,IAAD,CAAMS,GAAI,CAAEwC,EAAG,GAAf,SACI,cAAC,IAAD,UACI,cAAC,IAAD,CACIC,WAAS,EACTC,UAAU,MACV5C,eAAe,SACfF,WAAW,UAJf,SAMI,cAAC,IAAD,CAAM+C,MAAI,EAACjD,GAAI,GAAf,SACI,cAAC,IAAD,CAAM+C,WAAS,EACXvD,QAAS,EADb,SAEK+C,EAAUW,KAAI,SAACC,EAAOC,GAAR,OACX,cAAC,IAAD,CAAcH,MAAI,EAACjD,GAAI,GAAIM,GAAI,CAAE+C,eAAgB,QAAUC,UAAWC,IAAYC,GAAE,mBAAcL,EAAM1B,IAAxG,SACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAYgC,cAAY,EAACpD,QAAQ,KAAKiD,UAAU,MAAhD,SACKH,EAAMO,QAEX,cAAC,IAAD,CAAYrD,QAAQ,YAApB,SACK8C,EAAMQ,sBAPZP,kBAqBvC,cAAC,IAAD","file":"static/js/18.abb0aab8.chunk.js","sourcesContent":["import { Box, Container, Link, Typography } from '@material-ui/core';\r\nimport { experimentalStyled } from '@material-ui/core/styles';\r\nimport moment from 'moment'\r\n\r\nconst FooterWrapper = experimentalStyled(Box)(\r\n  ({ theme }) => `\r\n        border-radius: 0;\r\n        margin: ${theme.spacing(3)} 0;\r\n`\r\n);\r\n\r\nfunction Footer() {\r\n  const currentYear = moment().format('YYYY')\r\n  return (\r\n    <FooterWrapper>\r\n      <Container maxWidth=\"lg\">\r\n        <Box\r\n          py={3}\r\n          display={{ xs: 'block', md: 'flex' }}\r\n          alignItems=\"center\"\r\n          textAlign={{ xs: 'center', md: 'left' }}\r\n          justifyContent=\"space-between\"\r\n        >\r\n          <Box>\r\n            <Typography variant=\"subtitle1\">\r\n              &copy; {currentYear} - Fadhli Yulyanto\r\n            </Typography>\r\n          </Box>\r\n          <Typography sx={{ pt: { xs: 2, md: 0 } }} variant=\"subtitle1\">\r\n            Crafted by <Link href=\"https://bloomui.com\" target=\"_blank\" rel=\"noopener noreferrer\">BloomUI.com</Link>\r\n          </Typography>\r\n        </Box>\r\n      </Container>\r\n    </FooterWrapper>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import axios from 'axios'\r\nimport { sha256Generator } from 'src/lib/encryptor'\r\nimport moment from 'moment'\r\n\r\nrequire('dotenv').config()\r\n\r\nconst apiurl = process.env.REACT_APP_API_URL\r\nconst apiKey = process.env.REACT_APP_API_KEY\r\n\r\nexport const getBlogs = async () => {\r\n    try{\r\n        const result = await axios.get(`${apiurl}/blogs`)\r\n\r\n        return result.data\r\n    }catch(errors){\r\n        console.error(errors)\r\n        return errors.response.data\r\n    }\r\n}\r\n\r\nexport const getBlogsDetail = async (id: string) => {\r\n    try{\r\n\r\n        const result = await axios.get(`${apiurl}/blogs/details/${id}`)\r\n\r\n        return result.data\r\n    }catch(errors){\r\n        console.error(errors)\r\n        return errors.response.data\r\n    }\r\n}\r\n\r\nexport const saveComments = async (param: any, id: string) => {\r\n    const timestamp = moment().unix()\r\n\r\n    const config = {\r\n        headers: {\r\n            securitycode: sha256Generator(apiKey+param.username+timestamp),\r\n            timestamp: timestamp.toString()\r\n        }\r\n    }\r\n\r\n    try{\r\n        const res = await axios.post(`${apiurl}/blogs/comments/${id}`, param, config)\r\n\r\n        return res.data\r\n    }catch(errors){\r\n        return errors.response.data\r\n    }\r\n}","import { Helmet } from 'react-helmet-async'\r\nimport { useEffect, useRef, useState } from 'react'\r\nimport { Container, Grid, CssBaseline, ButtonBase } from '@material-ui/core'\r\nimport { NavLink as RouterLink } from 'react-router-dom'\r\n\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport Card from '@material-ui/core/Card'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport Footer from 'src/components/Footer'\r\nimport { getBlogs } from 'src/api/blogs'\r\n\r\nfunction BlogsPage(){\r\n    const [tableData, setTableData] = useState([])\r\n\r\n    const getData = async () => {\r\n        const param = {\r\n            type: 'posts'\r\n        }\r\n\r\n        const data = await getBlogs()\r\n\r\n        if(data.results.length > 0){\r\n            setTableData(data.results)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, [])\r\n\r\n    return(\r\n        <>\r\n            <Helmet>\r\n                <title> Dynasis | Blogs </title>\r\n            </Helmet>\r\n\r\n            <Container maxWidth=\"xl\">\r\n                <Card sx={{ p: 2 }}>\r\n                    <CardContent>\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justifyContent=\"center\"\r\n                            alignItems=\"stretch\"\r\n                        >\r\n                            <Grid item xs={12}>\r\n                                <Grid container\r\n                                    spacing={3}>\r\n                                    {tableData.map((entry, i) => (\r\n                                        <Grid key={i} item xs={12} sx={{ textDecoration: 'none' }} component={RouterLink} to={`/article/${entry.id}`}>\r\n                                            <Card>\r\n                                                <CardContent>\r\n                                                    <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                                                        {entry.title}\r\n                                                    </Typography>\r\n                                                    <Typography variant=\"subtitle2\">\r\n                                                        {entry.publishedDate}\r\n                                                    </Typography>\r\n                                                </CardContent>\r\n                                            </Card>\r\n                                        </Grid>\r\n                                    ))}\r\n                                    \r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </CardContent>\r\n                </Card>\r\n            </Container>\r\n\r\n            <Footer />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BlogsPage"],"sourceRoot":""}